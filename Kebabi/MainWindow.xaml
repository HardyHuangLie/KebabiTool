<Window x:Class="Kebabi.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Kebabi"
        mc:Ignorable="d"
        Title="Kebabi" Height="480" Width="850" ResizeMode="CanMinimize" Background="White" Icon="/E17YMPMUYAExTuh-orig-modified.png">
    <Window.Resources>
        <Style x:Key="ScrollViewerStyle1" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" RadiusY="15" RadiusX="15" StrokeThickness="0"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanHorizontallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" CanVerticallyScroll="False" Grid.Column="0" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" BorderThickness="0,0,0,0" Background="WhiteSmoke" BorderBrush="#FFF0F0F0" Foreground="{x:Null}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="White"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF676767"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFCECECE"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF717171"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="5,5,5,5" Width="20" Height="20">
                                <Grid x:Name="markGrid" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="0,0,0,0" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBDBDBD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF9A9A9A"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="15,15,15,15">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>

        <ScrollViewer Margin="40,75,40,0" Height="250" VerticalAlignment="Top">
            <Grid Width="748">
                <CheckBox x:Name="Remove" Style="{DynamicResource CheckBoxStyle1}" FontSize="18" Margin="15,20,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="False" FontFamily="Segoe UI" Checked="Remove_Checked">
                    <Grid>
                        <Rectangle Width="319" Height="57.9921806337573" Stroke="Black" StrokeThickness="2" RadiusX="10" RadiusY="10" />
                        <TextBlock Text="{DynamicResource Null}" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </CheckBox>
                <CheckBox x:Name="Zero" Style="{DynamicResource CheckBoxStyle1}" FontSize="18" HorizontalAlignment="Right" VerticalAlignment="Top" IsChecked="False" FontFamily="Segoe UI" Margin="0,20,15,0" Checked="Zero_Checked">
                    <Image Source="Img/0.png" Width="320">
                        <Image.Clip>
                            <RectangleGeometry RadiusX="15" RadiusY="10" Rect="0,0,320,56.9921773142112"/>
                        </Image.Clip>
                    </Image>
                </CheckBox>
                <CheckBox x:Name="First" Style="{DynamicResource CheckBoxStyle1}" FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="False" FontFamily="Segoe UI" Margin="15,110,0,0" Checked="First_Checked">
                    <Image Source="Img/1.png" Width="320">
                        <Image.Clip>
                            <RectangleGeometry RadiusX="15" RadiusY="10" Rect="0,0,320,56.9921773142112"/>
                        </Image.Clip>
                    </Image>
                </CheckBox>
                <CheckBox x:Name="Forth" Style="{DynamicResource CheckBoxStyle1}" FontSize="18" HorizontalAlignment="Right" VerticalAlignment="Top" IsChecked="False" FontFamily="Segoe UI" Margin="0,190,15,0" Checked="Forth_Checked">
                    <Image Source="Img/4.png" Width="320">
                        <Image.Clip>
                            <RectangleGeometry RadiusX="15" RadiusY="10" Rect="0,0,320,56.9921773142112"/>
                        </Image.Clip>
                    </Image>
                </CheckBox>
                <CheckBox x:Name="Third" Style="{DynamicResource CheckBoxStyle1}" FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="False" FontFamily="Segoe UI" Margin="15,190,0,0" Checked="Third_Checked">
                    <Image Source="Img/3.png" Width="320">
                        <Image.Clip>
                            <RectangleGeometry RadiusX="15" RadiusY="10" Rect="0,0,320,56.9921773142112"/>
                        </Image.Clip>
                    </Image>
                </CheckBox>
                <CheckBox x:Name="Second" Style="{DynamicResource CheckBoxStyle1}" FontSize="18" HorizontalAlignment="Right" VerticalAlignment="Top" IsChecked="False" FontFamily="Segoe UI" Margin="0,110,15,0" Checked="Second_Checked">
                    <Image Source="Img/2.png" Width="320">
                        <Image.Clip>
                            <RectangleGeometry RadiusX="15" RadiusY="10" Rect="0,0,320,56.9921773142112"/>
                        </Image.Clip>
                    </Image>
                </CheckBox>
                <CheckBox x:Name="Fifth" Style="{DynamicResource CheckBoxStyle1}" FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="False" FontFamily="Segoe UI" Margin="15,270,0,20" Checked="Fifth_Checked">
                    <Image Source="Img/5.png" Width="320">
                        <Image.Clip>
                            <RectangleGeometry RadiusX="15" RadiusY="10" Rect="0,0,320,56.9921773142112"/>
                        </Image.Clip>
                    </Image>
                </CheckBox>
                <CheckBox x:Name="Sixth" Style="{DynamicResource CheckBoxStyle1}" FontSize="18" HorizontalAlignment="Right" VerticalAlignment="Top" IsChecked="False" FontFamily="Segoe UI" Margin="0,270,15,20" Checked="Sixth_Checked">
                    <Image Source="Img/6.png" Width="320">
                        <Image.Clip>
                            <RectangleGeometry RadiusX="15" RadiusY="10" Rect="0,0,320,56.9921773142112"/>
                        </Image.Clip>
                    </Image>
                </CheckBox>
            </Grid>
        </ScrollViewer>
        <Rectangle Stroke="Black" RadiusX="15" RadiusY="15" Margin="40,61,40,0" Height="283" VerticalAlignment="Top"/>
        <Button x:Name="Start" Style="{DynamicResource ButtonStyle1}" Content="{DynamicResource Start}" Height="45" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" FontSize="24" Margin="0,360,0,0" FontFamily="Segoe UI" FontWeight="Bold" BorderBrush="Black" BorderThickness="0,0,0,0" HorizontalAlignment="Center" Padding="20,0,20,0" Click="Start_Click"/>
        <CheckBox x:Name="CreatShortCut" Style="{DynamicResource CheckBoxStyle1}" FontSize="18" Margin="0,30,51,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsChecked="False" FontFamily="Segoe UI" Checked="CreatShortCut_Checked" Unchecked="CreatShortCut_Unchecked" Content="{DynamicResource CreatShortCut}"/>

    </Grid>
</Window>
